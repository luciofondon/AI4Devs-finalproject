name: Deploy Neobus App to EC2

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    # Backend setup and build
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm install

    - name: Build backend
      working-directory: ./backend
      run: npm run build

    # Frontend setup and build
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
        aws-region: 'us-east-1'

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_INSTANCE }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        # Crear archivo de clave privada
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        
        # Crear directorios de despliegue si no existen
        ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST 'mkdir -p /var/www/neobus-app/frontend /var/www/neobus-app/backend'
        
        # Transferir archivos del frontend
        scp -o StrictHostKeyChecking=no -i private_key.pem -r frontend/build/* $USER@$HOST:/var/www/neobus-app/frontend/
        
        # Transferir archivos del backend
        scp -o StrictHostKeyChecking=no -i private_key.pem -r backend/dist/* $USER@$HOST:/var/www/neobus-app/backend/
        
        # Transferir package.json y package-lock.json del backend
        scp -o StrictHostKeyChecking=no -i private_key.pem backend/package*.json $USER@$HOST:/var/www/neobus-app/backend/
        
        # Instalar dependencias del backend en el servidor
        ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST 'cd /var/www/neobus-app/backend && npm install --production'
        
        # Reiniciar el servicio de backend
        ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST 'sudo systemctl restart neobus-backend'
        
        # Limpiar archivo de clave
        rm -f private_key.pem